@page "/login"
@layout EmptyLayout
@inject IAuthenticationService AuthService
@inject NavigationManager NavigationManager

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card mt-5">
                <div class="card-header">
                    <h3 class="text-center">Iniciar Sesión</h3>
                </div>
                <div class="card-body">
                    <EditForm Model="@loginModel" OnValidSubmit="HandleValidSubmit" FormName="loginform">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group mb-3">
                            <label for="email">Email</label>
                            <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
                            <ValidationMessage For="@(() => loginModel.Email)" />
                        </div>

                        <div class="form-group mb-3">
                            <label for="password">Contraseña</label>
                            <InputText type="password" id="password" class="form-control" @bind-Value="loginModel.Password" />
                            <ValidationMessage For="@(() => loginModel.Password)" />
                        </div>

                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger">
                                @errorMessage
                            </div>
                        }

                        <button type="submit" class="btn btn-primary w-100" disabled="@isProcessing">
                            @if (isProcessing)
                            {
                                <span>Procesando...</span>
                            }
                            else
                            {
                                <span>Iniciar Sesión</span>
                            }
                        </button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private string errorMessage;
    private bool isProcessing;

    protected override void OnInitialized()
    {
        if (AuthService.IsAuthenticated())
        {
            NavigationManager.NavigateTo("/", true);
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            isProcessing = true;
            errorMessage = string.Empty;
            StateHasChanged();

            var success = await AuthService.LoginAsync(loginModel.Email, loginModel.Password);

            if (success)
            {
                var uri = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
                if (string.IsNullOrEmpty(uri) || uri.Equals("login", StringComparison.OrdinalIgnoreCase))
                {
                    NavigationManager.NavigateTo("/", true);
                }
                else
                {
                    NavigationManager.NavigateTo($"/{uri}", true);
                }
            }
            else
            {
                errorMessage = "Credenciales inválidas";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error durante el inicio de sesión: {ex.ToString()}";
        }
        finally
        {
            isProcessing = false;
            StateHasChanged();
        }
    }
}